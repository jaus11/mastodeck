<!DOCTYPE html>
<html>
<head>
    <title>Mastodeck</title>
    <meta charset="UTF-8">
    <link rel="stylesheet" type="text/css" href="/stylesheets/main.css" />
    <script type="text/javascript">
    var url = {};

    function stream(column){
        var req = new XMLHttpRequest();
        var field_url;
        switch (column.getAttribute('name')) {
            case "home":
                field_url="user";
                break;
            case "local":
                field_url="public/local";
                break;

            case "public":
                field_url="public";
                break;
            default:
                field_url="";
        }
        var urls = url[column.getAttribute('number')];
        req.open("get","<%= api_url %>streaming/"+field_url+"?"+urls.prev.split('?')[1]+"?"+urls.next.split('?')[1],true);
        req.responseType = "text" ;
        req.setRequestHeader("Authorization","Bearer "+ "<%= access_token %>");
        var main = column.children[1];
        var size=0;
        var isContent = false;
        req.onreadystatechange = function() {
            if(this.readyState == 3) {
                var res = this.response.substr(size).split('\n');
                //console.log(column.getAttribute('name') + " : " + res.length);
                // console.log(count);
                // if(column.getAttribute('name')=='public') {
                //     console.log(count);
                //     if(count>=5) req.onreadystatechange = function() {};
                //     count++;
                //     console.log(this.response);
                // }
                for(var i=0;i<res.length;i++){
                    if(res[i]=="event: update"){
                        isContent=true;
                    }else if(isContent && res[i]!=""){
                        try{
                            var data = JSON.parse(res[i].substr(6));
                            main.insertBefore(createTootCell(data),main.firstChild);
                        }catch(e){
                            console.log(res[i]);
                        }
                        isContent=false;
                    }
                }
                size=this.response.length;
            }
        }
        req.onerror = function() {
            console.log(this);
        }
        req.send() ;
    }

    function load(column) {
        var req = new XMLHttpRequest();
        var field_url;
        switch (column.getAttribute('name')) {
            case "home":
            field_url="timelines/home";
            break;
            case "local":
            field_url="timelines/public?local=on";
            break;

            case "public":
            field_url="timelines/public";
            break;
            default:
            field_url="";
        }
        req.open("get","<%= api_url %>"+field_url,true);
        req.responseType = "json" ;
        req.setRequestHeader("Authorization","Bearer "+ "<%= access_token %>");
        req.onload = function() {
            var link = this.getResponseHeader("Link");
            var header = link.split(',');
            var next = header[0].split(';')[0].replace("<","").replace(">","");
            var prev = header[1].split(';')[0].replace(" <","").replace(">","");
            url[column.getAttribute('number')]={next: next, prev: prev};

            var main = column.children[1];
            for(var i=this.response.length-1;i>=0;i--) {
                main.insertBefore(createTootCell(this.response[i]),main.firstChild);
            }
            stream(column);
        }
        req.onerror = function() {
            console.log(this);
        }
        req.send();
    }

    function createTootCell(data){
        var cell = document.createElement('div');
        cell.id = 'cell';

        var prof_img = document.createElement('img');
        prof_img.src=data.account.avatar;
        prof_img.className="prof_img";
        cell.appendChild(prof_img);

        var name = document.createElement('h4');
        name.innerHTML = data.account.display_name;
        name.className = "username";
        cell.appendChild(name);

        var id = document.createElement('p');
        id.className="id";
        id.innerHTML = '@' + data.account.username;
        cell.appendChild(id);

        var content = document.createElement('div');
        content.className = "content";
        content.innerHTML = data.content;
        cell.appendChild(content);

        return cell;
    }

    function addColumn(field_name){
        var columns = document.getElementById("columns");

        var newColumn = document.createElement('div');
        newColumn.id = "column";
        newColumn.setAttribute('name',field_name);
        newColumn.setAttribute('number',columns.childElementCount+1);
        //else newColumn.setAttribute('number',"1")

        var top = document.createElement('div');
        top.id="top";
        top.innerHTML = field_name.charAt(0).toUpperCase()+field_name.substr(1);
        newColumn.appendChild(top);

        var toot_field = document.createElement('div');
        toot_field.id="toot_field";
        newColumn.appendChild(toot_field);

        columns.appendChild(newColumn);
        load(newColumn);
    }

    function createPanel(){
        var panel = document.createElement('div');
        panel.id = "panel";
        panel.style.zIndex=1;
        document.body.appendChild(panel);
    }

    function openTootField(){
        var menu = document.getElementById('menu');
        console.log(menu.childElementCount);
        if(menu.childElementCount==1){
            var toot_menu = document.createElement('div');
            toot_menu.className = "toot_menu";

            var toot_input_area = document.createElement('textarea');
            toot_input_area.className = 'toot_input_area';
            toot_menu.appendChild(toot_input_area);

            var toot_button = document.createElement("input");
            toot_button.setAttribute('type','submit');
            toot_button.setAttribute('value','toot');
            toot_menu.appendChild(toot_button)

            menu.appendChild(toot_menu);
        } else {
            menu.removeChild(document.getElementsByClassName('toot_menu')[0]);
        }
    }

    </script>
</head>
<body>
    <div id="menu">
        <div class="buttons">
            <input type="button" value="投稿" onclick="openTootField()">
            <input type="button" value="検索" onclick="">
            <input type="button" value="アカウント追加" onclick="">
            <input type="button" value="プロフィール" onclick="">
            <label style="color: white;">add</label>
            <input type="button" value="home" onclick="addColumn('home')">
            <input type="button" value="public" onclick="addColumn('public')">
            <input type="button" value="local" onclick="addColumn('local')">
            <input type="button" value="ログアウト" onclick="location.href='/logout'">
        </div>
    </div>
    <div id="columns">
        <script type="text/javascript">
        addColumn("home");
        addColumn("local");
        addColumn("public");
        </script>
    </div>
    <div class="footer">
    </div>
</body>
</html>
